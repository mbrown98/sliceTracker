[{"/Users/mattbrown/projects/slice/src/index.js":"1","/Users/mattbrown/projects/slice/src/App.js":"2","/Users/mattbrown/projects/slice/src/components/Details/styles.js":"3","/Users/mattbrown/projects/slice/src/components/Details/Details.js":"4","/Users/mattbrown/projects/slice/src/components/Main/Main.js":"5","/Users/mattbrown/projects/slice/src/components/Main/Form/Form.js":"6","/Users/mattbrown/projects/slice/src/components/Main/List/styles.js":"7","/Users/mattbrown/projects/slice/src/components/Main/List/List.js":"8","/Users/mattbrown/projects/slice/src/context/context.js":"9","/Users/mattbrown/projects/slice/src/context/contextReducer.js":"10","/Users/mattbrown/projects/slice/src/components/Main/styles.js":"11"},{"size":249,"mtime":1608662453757,"results":"12","hashOfConfig":"13"},{"size":694,"mtime":1608656621346,"results":"14","hashOfConfig":"13"},{"size":224,"mtime":1608655473729,"results":"15","hashOfConfig":"13"},{"size":549,"mtime":1608656061906,"results":"16","hashOfConfig":"13"},{"size":909,"mtime":1608660323612,"results":"17","hashOfConfig":"13"},{"size":2968,"mtime":1608737763833,"results":"18","hashOfConfig":"13"},{"size":399,"mtime":1608659775419,"results":"19","hashOfConfig":"13"},{"size":1655,"mtime":1608737066315,"results":"20","hashOfConfig":"13"},{"size":719,"mtime":1608662916016,"results":"21","hashOfConfig":"13"},{"size":392,"mtime":1608663326411,"results":"22","hashOfConfig":"13"},{"size":490,"mtime":1608656291287,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xcy3cd",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mattbrown/projects/slice/src/index.js",[],"/Users/mattbrown/projects/slice/src/App.js",[],["49","50"],"/Users/mattbrown/projects/slice/src/components/Details/styles.js",[],"/Users/mattbrown/projects/slice/src/components/Details/Details.js",["51"],"import React from \"react\";\nimport { Card, CardHeader, CardContent, Typography } from \"@material-ui/core\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nimport useStyles from \"./styles\";\nconst Details = ({ title }) => {\n  const classes = useStyles();\n  return (\n    <Card className={title === \"Income\" ? classes.income : classes.expense}>\n      <CardHeader title={title} />\n      <CardContent>\n        <Typography variant=\"h5\">$50</Typography>\n        {/* <Doughnut data=\"DATA\" /> */}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default Details;\n","/Users/mattbrown/projects/slice/src/components/Main/Main.js",["52"],"/Users/mattbrown/projects/slice/src/components/Main/Form/Form.js",["53"],"import React, { useState, useContext } from \"react\";\nimport {\n  TextField,\n  Typography,\n  Grid,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { ExpenseTrackerContext } from \"../../../context/context\";\nimport useStyles from \"./styles\";\nimport { FormatIndentDecrease } from \"@material-ui/icons\";\nimport {\n  incomeCategories,\n  expenseCategories,\n} from \"../../../constants/categories\";\n\nimport formatDate from \"../../../utils/formatDate\";\n\nconst initialState = {\n  amount: \"\",\n  category: \"\",\n  type: \"Income\",\n  date: formatDate(new Date()),\n};\nconst Form = () => {\n  const classes = useStyles();\n  const [formData, setFormData] = useState(initialState);\n  const { addTransaction } = useContext(ExpenseTrackerContext);\n\n  const createTransaction = () => {\n    const transaction = { ...formData, amount: formData.amount, id: uuidv4() };\n    addTransaction(transaction);\n    setFormData(initialState);\n  };\n\n  const selectedCategories =\n    formData.type === \"Income\" ? incomeCategories : expenseCategories;\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Typography align=\"center\" variant=\"subtitle2\" gutterbottom>\n          ...\n        </Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Type</InputLabel>\n          <Select\n            value={formData.type}\n            onChange={(e) =>\n              setFormData({ ...formData, type: formatDate(e.target.value) })\n            }\n          >\n            <MenuItem value=\"Income\">Income</MenuItem>\n            <MenuItem value=\"Expense\">Expense</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Category</InputLabel>\n          <Select\n            value={formData.category}\n            onChange={(e) =>\n              setFormData({ ...formData, category: e.target.value })\n            }\n          >\n            {selectedCategories.map((c) => (\n              <MenuItem key={c.type} value={c.type}>\n                {c.type}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          type=\"number\"\n          label=\"Amount\"\n          fullWidth\n          value={formData.amount}\n          onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          type=\"date\"\n          label=\"Date\"\n          fullWidth\n          value={formData.date}\n          onChange={(e) => setFormData({ ...formData, date: e.target.value })}\n        />\n      </Grid>\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        fullWidth\n        onClick={createTransaction}\n      >\n        Create\n      </Button>\n    </Grid>\n  );\n};\n\nexport default Form;\n","/Users/mattbrown/projects/slice/src/components/Main/List/styles.js",[],"/Users/mattbrown/projects/slice/src/components/Main/List/List.js",[],"/Users/mattbrown/projects/slice/src/context/context.js",[],"/Users/mattbrown/projects/slice/src/context/contextReducer.js",[],"/Users/mattbrown/projects/slice/src/components/Main/styles.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":3,"column":10,"nodeType":"60","messageId":"61","endLine":3,"endColumn":18},{"ruleId":"62","severity":2,"message":"63","line":33,"column":12,"nodeType":"64","endLine":33,"endColumn":16},{"ruleId":"58","severity":1,"message":"65","line":15,"column":10,"nodeType":"60","messageId":"61","endLine":15,"endColumn":30},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"no-unused-vars","'Doughnut' is defined but never used.","Identifier","unusedVar","react/jsx-no-undef","'List' is not defined.","JSXIdentifier","'FormatIndentDecrease' is defined but never used.","no-global-assign","no-unsafe-negation"]