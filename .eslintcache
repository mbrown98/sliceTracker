[{"/Users/mattbrown/projects/slice/src/index.js":"1","/Users/mattbrown/projects/slice/src/App.js":"2","/Users/mattbrown/projects/slice/src/components/Details/styles.js":"3","/Users/mattbrown/projects/slice/src/components/Details/Details.js":"4","/Users/mattbrown/projects/slice/src/components/Main/Main.js":"5","/Users/mattbrown/projects/slice/src/components/Main/Form/Form.js":"6","/Users/mattbrown/projects/slice/src/components/Main/List/styles.js":"7","/Users/mattbrown/projects/slice/src/components/Main/List/List.js":"8","/Users/mattbrown/projects/slice/src/context/context.js":"9","/Users/mattbrown/projects/slice/src/context/contextReducer.js":"10","/Users/mattbrown/projects/slice/src/components/Main/styles.js":"11","/Users/mattbrown/projects/slice/src/useTransactions.js":"12","/Users/mattbrown/projects/slice/src/utils/formatDate.js":"13"},{"size":423,"mtime":1608743194915,"results":"14","hashOfConfig":"15"},{"size":1003,"mtime":1608743412730,"results":"16","hashOfConfig":"15"},{"size":224,"mtime":1608655473729,"results":"17","hashOfConfig":"15"},{"size":685,"mtime":1608739116615,"results":"18","hashOfConfig":"15"},{"size":909,"mtime":1608660323612,"results":"19","hashOfConfig":"15"},{"size":3423,"mtime":1608743986620,"results":"20","hashOfConfig":"15"},{"size":399,"mtime":1608659775419,"results":"21","hashOfConfig":"15"},{"size":1655,"mtime":1608737066315,"results":"22","hashOfConfig":"15"},{"size":719,"mtime":1608662916016,"results":"23","hashOfConfig":"15"},{"size":392,"mtime":1608663326411,"results":"24","hashOfConfig":"15"},{"size":490,"mtime":1608656291287,"results":"25","hashOfConfig":"15"},{"size":1294,"mtime":1608739101677,"results":"26","hashOfConfig":"15"},{"size":332,"mtime":1608737720162,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xcy3cd",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mattbrown/projects/slice/src/index.js",[],"/Users/mattbrown/projects/slice/src/App.js",[],"/Users/mattbrown/projects/slice/src/components/Details/styles.js",[],["56","57"],"/Users/mattbrown/projects/slice/src/components/Details/Details.js",[],"/Users/mattbrown/projects/slice/src/components/Main/Main.js",["58"],"/Users/mattbrown/projects/slice/src/components/Main/Form/Form.js",["59","60"],"import React, { useState, useEffect, useContext } from \"react\";\nimport {\n  TextField,\n  Typography,\n  Grid,\n  Button,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n} from \"@material-ui/core\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useSpeechContext } from \"@speechly/react-client\";\nimport { ExpenseTrackerContext } from \"../../../context/context\";\nimport useStyles from \"./styles\";\nimport { FormatIndentDecrease } from \"@material-ui/icons\";\nimport {\n  incomeCategories,\n  expenseCategories,\n} from \"../../../constants/categories\";\n\nimport formatDate from \"../../../utils/formatDate\";\n\nconst initialState = {\n  amount: \"\",\n  category: \"\",\n  type: \"Income\",\n  date: formatDate(new Date()),\n};\nconst Form = () => {\n  const classes = useStyles();\n  const [formData, setFormData] = useState(initialState);\n  const { addTransaction } = useContext(ExpenseTrackerContext);\n  const { segment } = useSpeechContext();\n\n  const createTransaction = () => {\n    const transaction = { ...formData, amount: formData.amount, id: uuidv4() };\n    addTransaction(transaction);\n    setFormData(initialState);\n  };\n\n  useEffect(() => {\n    if (segment) {\n      if (segment.intent.intent === \"add_expense\") {\n        setFormData({ ...formData, type: \"Expense\" });\n      } else if (segment.intent.intent === \"add_income\") {\n        setFormData({ ...formData, type: \"Income\" });\n      }\n    }\n  }, [segment]);\n\n  const selectedCategories =\n    formData.type === \"Income\" ? incomeCategories : expenseCategories;\n  return (\n    <Grid container spacing={2}>\n      <Grid item xs={12}>\n        <Typography align=\"center\" variant=\"subtitle2\" gutterbottom>\n          {segment && segment.words.map((word) => word.value).join(\" \")}\n        </Typography>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Type</InputLabel>\n          <Select\n            value={formData.type}\n            onChange={(e) => setFormData({ ...formData, type: e.target.value })}\n          >\n            <MenuItem value=\"Income\">Income</MenuItem>\n            <MenuItem value=\"Expense\">Expense</MenuItem>\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <FormControl fullWidth>\n          <InputLabel>Category</InputLabel>\n          <Select\n            value={formData.category}\n            onChange={(e) =>\n              setFormData({ ...formData, category: e.target.value })\n            }\n          >\n            {selectedCategories.map((c) => (\n              <MenuItem key={c.type} value={c.type}>\n                {c.type}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          type=\"number\"\n          label=\"Amount\"\n          fullWidth\n          value={formData.amount}\n          onChange={(e) =>\n            setFormData({ ...formData, amount: Number(e.target.value) })\n          }\n        />\n      </Grid>\n      <Grid item xs={6}>\n        <TextField\n          type=\"date\"\n          label=\"Date\"\n          fullWidth\n          value={formData.date}\n          onChange={(e) => setFormData({ ...formData, date: e.target.value })}\n        />\n      </Grid>\n      <Button\n        className={classes.button}\n        variant=\"outlined\"\n        color=\"primary\"\n        fullWidth\n        onClick={createTransaction}\n      >\n        Create\n      </Button>\n    </Grid>\n  );\n};\n\nexport default Form;\n","/Users/mattbrown/projects/slice/src/components/Main/List/styles.js",[],"/Users/mattbrown/projects/slice/src/components/Main/List/List.js",[],"/Users/mattbrown/projects/slice/src/context/context.js",[],"/Users/mattbrown/projects/slice/src/context/contextReducer.js",[],"/Users/mattbrown/projects/slice/src/components/Main/styles.js",[],"/Users/mattbrown/projects/slice/src/useTransactions.js",[],"/Users/mattbrown/projects/slice/src/utils/formatDate.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":2,"message":"66","line":33,"column":12,"nodeType":"67","endLine":33,"endColumn":16},{"ruleId":"68","severity":1,"message":"69","line":16,"column":10,"nodeType":"70","messageId":"71","endLine":16,"endColumn":30},{"ruleId":"72","severity":1,"message":"73","line":50,"column":6,"nodeType":"74","endLine":50,"endColumn":15,"suggestions":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"react/jsx-no-undef","'List' is not defined.","JSXIdentifier","no-unused-vars","'FormatIndentDecrease' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["78"],"no-global-assign","no-unsafe-negation",{"desc":"79","fix":"80"},"Update the dependencies array to be: [formData, segment]",{"range":"81","text":"82"},[1384,1393],"[formData, segment]"]